/**
 *  Irrigation Controller v2
 *  This SmartThings Device Type Code Works With Arduino Irrigation Controller v2
 *
 *	Creates connected irrigation controller
 *  Stay tuned for a smarter controller!
 *  Author: stan@dotson.info
 *  Date: 2013-11-11
 *  Copyright 2014 Stan Dotson
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 */
 
 // for the UI
preferences {
	input("oneTimer", "text", title: "Zone One", description: "Zone One Time", required: true)
 	input("twoTimer", "text", title: "Zone Two", description: "Zone Two Time", required: true)
  	input("threeTimer", "text", title: "Zone Three", description: "Zone Three Time", required: true)
  	input("fourTimer", "text", title: "Zone Four", description: "Zone Four Time", required: true)
  	input("fiveTimer", "text", title: "Zone Five", description: "Zone Five Time", required: true)
  	input("sixTimer", "text", title: "Zone Six", description: "Zone Six Time", required: true)
  	input("sevenTimer", "text", title: "Zone Seven", description: "Zone Seven Time", required: true)
  	input("eightTimer", "text", title: "Zone Eight", description: "Zone Eight Time", required: true)
}

metadata {
	definition (name: "Irrigation Controller v2", author: "stan@dotson.info") {
    	capability "Switch"
		command "oneOn"
		command "oneOff"
		command "twoOn"
		command "twoOff"
		command "threeOn"
		command "threeOff"
		command "fourOn"
		command "fourOff"
		command "fiveOn"
		command "fiveOff"
		command "sixOn"
		command "sixOff"
		command "sevenOn"
		command "sevenOff"
		command "eightOn"
		command "eightOff"
        command "update"
	}

	simulator {
		// TODO: define status and reply messages here
        status "refresh_all_off" : "catchall: 0104 0000 01 01 0140 00 D919 00 00 0000 0A 00 0A6F6B2C6F6666312C6F6666322C6F6666332C6F6666342C6F6666352C6F6666362C6F6666372C6F6666382C"
        status "turn_all_on" : "catchall: 0104 0000 01 01 0140 00 D919 00 00 0000 0A 00 0A6F6B2C6F6E312C71322C71332C71342C71352C71362C71372C71382C"
	}
    
    tiles {
		standardTile("allZonesTile", "device.switch", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
            state "off", label: 'Start', action: "switch.on", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "starting"
			state "on", label: 'Running', action: "switch.off", icon: "st.Health & Wellness.health7", backgroundColor: "#53a7c0", nextState: "stopping"
			state "starting", label: 'Starting...', action: "switch.on", icon: "st.Health & Wellness.health7", backgroundColor: "#53a7c0"
			state "stopping", label: 'Stopping...', action: "switch.off", icon: "st.Health & Wellness.health7", backgroundColor: "#53a7c0"
        }
        standardTile("zoneOneTile", "device.zoneOne", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
			state "off1", label: 'One', action: "oneOn", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "sending1"
            state "q1", label: 'One', action: "oneOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#c0a353", nextState: "sendingOff1"
            state "on1", label: 'One', action: "oneOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#53a7c0", nextState: "sendingOff1"
			state "sending1", label: 'sending', action: "oneOn", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
			state "sendingOff1", label: 'sending', action: "oneOff", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
        }
		standardTile("zoneTwoTile", "device.zoneTwo", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
			state "off2", label: 'Two', action: "twoOn", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "sending2"
            state "q2", label: 'Two', action: "twoOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#c0a353", nextState: "sendingOff2"
            state "on2", label: 'Two', action: "twoOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#53a7c0", nextState: "sendingOff2"
			state "sending2", label: 'sending', action: "twoOn", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
			state "sendingOff2", label: 'sending', action: "twoOff", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
        }
        standardTile("zoneThreeTile", "device.zoneThree", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
			state "off3", label: 'Three', action: "threeOn", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "sending3"
            state "q3", label: 'Three', action: "threeOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#c0a353", nextState: "sendingOff3"
            state "on3", label: 'Three', action: "threeOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#53a7c0", nextState: "sendingOff3"
			state "sending3", label: 'sending', action: "threeOn", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
			state "sendingOff3", label: 'sending', action: "threeOff", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
        }
        standardTile("zoneFourTile", "device.zoneFour", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
			state "off4", label: 'Four', action: "fourOn", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "sending4"
            state "q4", label: 'Four', action: "fourOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#c0a353", nextState: "sendingOff4"
            state "on4", label: 'Four', action: "fourOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#53a7c0", nextState: "sendingOff4"
			state "sending4", label: 'sending', action: "fourOn", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
			state "sendingOff4", label: 'sending', action: "fourOff", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
        }
        standardTile("zoneFiveTile", "device.zoneFive", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
			state "off5", label: 'Five', action: "fiveOn", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "sending5"
            state "q5", label: 'Five', action: "fiveOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#c0a353", nextState: "sendingOff5"
            state "on5", label: 'Five', action: "fiveOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#53a7c0", nextState: "sendingOff5"
			state "sending5", label: 'sending', action: "fiveOn", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
			state "sendingOff5", label: 'sending', action: "fiveOff", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
        }
        standardTile("zoneSixTile", "device.zoneSix", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
			state "off6", label: 'Six', action: "sixOn", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "sending6"
            state "q6", label: 'Six', action: "sixOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#c0a353", nextState: "sendingOff6"
            state "on6", label: 'Six', action: "sixOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#53a7c0", nextState: "sendingOff6"
			state "sending6", label: 'sending', action: "sixOn", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
			state "sendingOff6", label: 'sending', action: "sixOff", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
        }
        standardTile("zoneSevenTile", "device.zoneSeven", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
			state "off7", label: 'Seven', action: "sevenOn", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "sending7"
            state "q7", label: 'Seven', action: "sevenOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#c0a353", nextState: "sendingOff7"
            state "on7", label: 'Seven', action: "sevenOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#53a7c0", nextState: "sendingOff7"
			state "sending7", label: 'sending', action: "sevenOn", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
			state "sendingOff7", label: 'sending', action: "sevenOff", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
        }
        standardTile("zoneEightTile", "device.zoneEight", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true) {
			state "off8", label: 'Eight', action: "eightOn", icon: "st.Outdoor.outdoor12", backgroundColor: "#ffffff", nextState: "sending8"
            state "q8", label: 'Eight', action: "eightOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#c0a353", nextState: "sendingOff8"
            state "on8", label: 'Eight', action: "eightOff",icon: "st.Outdoor.outdoor12", backgroundColor: "#53a7c0", nextState: "sendingOff8"
			state "sending8", label: 'sending', action: "eightOn", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
			state "sendingOff8", label: 'sending', action: "eightOff", icon: "st.Health & Wellness.health7", backgroundColor: "#cccccc"
        }
        standardTile("refreshTile", "device.refresh", width: 1, height: 1, canChangeIcon: true, canChangeBackground: true, decoration: "flat") {
        	state "ok", action: "update", icon: "st.secondary.refresh", backgroundColor: "#ffffff"
        }

		main "allZonesTile"
		details(["zoneOneTile","zoneTwoTile","zoneThreeTile","zoneFourTile","zoneFiveTile","zoneSixTile","zoneSevenTile","zoneEightTile","refreshTile"])
	}
}

// parse events into attributes to create events
def parse(String description) {
	log.debug "Parsing '${description}'"
	log.debug "Parsed: ${zigbee.parse(description)}"
	
	def value = zigbee.parse(description)?.text
	if (value != null && value != " " && value != '"') {
		String delims = ","
		String[] tokens = value.split(delims)
		for (int x=0; x<tokens.length; x++) {
			def displayed = tokens[x] && tokens[x] != "ping"  //evaluates whether to display message
            
			def name = tokens[x] in ["on1", "q1", "off1"] ? "zoneOne"
				: tokens[x] in ["on2", "q2", "off2"] ? "zoneTwo"
				: tokens[x] in ["on3", "q3", "off3"] ? "zoneThree"
				: tokens[x] in ["on4", "q4", "off4"] ? "zoneFour"
				: tokens[x] in ["on5", "q5", "off5"] ? "zoneFive"
				: tokens[x] in ["on6", "q6", "off6"] ? "zoneSix"
				: tokens[x] in ["on7", "q7", "off7"] ? "zoneSeven"
				: tokens[x] in ["on8", "q8", "off8"] ? "zoneEight"
				: tokens[x] in ["ok"] ? "refresh" : null
			
            def currentVal = device.currentValue(name)
            
            def stateChange = true
			// It seems like this should work. When a state change is made due to a nextState parameter, the value is not changed.
            // if(currentVal) stateChange = currentVal != tokens[x]
            
			def result = createEvent(name: name, value: tokens[x], displayed: displayed, isStateChange: stateChange)
			log.debug "Parse returned ${result?.descriptionText}"
			sendEvent(result)
		}
	}
	
	if(anyZoneOn()) {
		return createEvent(name: "switch", value: "on", displayed: true)
	} else {
		return createEvent(name: "switch", value: "off", displayed: true)
	}
}

def anyZoneOn() {
    if(device.currentValue("zoneOne") in ["on1","q1"]) return true;
    if(device.currentValue("zoneTwo") in ["on2","q2"]) return true;
    if(device.currentValue("zoneThree") in ["on3","q3"]) return true;
    if(device.currentValue("zoneFour") in ["on4","q4"]) return true;
    if(device.currentValue("zoneFive") in ["on5","q5"]) return true;
    if(device.currentValue("zoneSix") in ["on6","q6"]) return true;
    if(device.currentValue("zoneSeven") in ["on7","q7"]) return true;
    if(device.currentValue("zoneEight") in ["on8","q8"]) return true;
    
    false;
}

// handle commands
def oneOn() {
	log.debug "Executing 'on,1'"
	zigbee.smartShield(text: "on,1,${oneTimer ?: 0}").format()
}

def oneOff() {
	log.debug "Executing 'off,1'"
	zigbee.smartShield(text: "off,1").format()
}

def twoOn() {
	log.debug "Executing 'on,2'"
	zigbee.smartShield(text: "on,2,${twoTimer ?: 0}").format()
}

def twoOff() {
	log.debug "Executing 'off,2'"
	zigbee.smartShield(text: "off,2").format()
}

def threeOn() {
	log.debug "Executing 'on,3'"
	zigbee.smartShield(text: "on,3,${threeTimer ?: 0}").format()
}

def threeOff() {
	log.debug "Executing 'off,3'"
	zigbee.smartShield(text: "off,3").format()
}

def fourOn() {
	log.debug "Executing 'on,4'"
	zigbee.smartShield(text: "on,4,${fourTimer ?: 0}").format()
}

def fourOff() {
	log.debug "Executing 'off,4'"
	zigbee.smartShield(text: "off,4").format()
}

def fiveOn() {
	log.debug "Executing 'on,5'"
	zigbee.smartShield(text: "on,5,${fiveTimer ?: 0}").format()
}

def fiveOff() {
	log.debug "Executing 'off,5'"
	zigbee.smartShield(text: "off,5").format()
}

def sixOn() {
	log.debug "Executing 'on,6'"
	zigbee.smartShield(text: "on,6,${sixTimer ?: 0}").format()
}

def sixOff() {
	log.debug "Executing 'off,6'"
	zigbee.smartShield(text: "off,6").format()
}

def sevenOn() {
	log.debug "Executing 'on,7'"
	zigbee.smartShield(text: "on,7,${sevenTimer ?: 0}").format()
}

def sevenOff() {
	log.debug "Executing 'off,7'"
	zigbee.smartShield(text: "off,7").format()
}

def eightOn() {
	log.debug "Executing 'on,8'"
	zigbee.smartShield(text: "on,8,${eightTimer ?: 0}").format()
}

def eightOff() {
	log.debug "Executing 'off,8'"
	zigbee.smartShield(text: "off,8").format()
}
def on() {
	log.debug "Executing 'allOn'"
	zigbee.smartShield(text: "allOn,${oneTimer ?: 0},${twoTimer ?: 0},${threeTimer ?: 0},${fourTimer ?: 0},${fiveTimer ?: 0},${sixTimer ?: 0},${sevenTimer ?: 0},${eightTimer ?: 0}").format()
}

def off() {
	log.debug "Executing 'allOff'"
	zigbee.smartShield(text: "allOff").format()
}

def update() {
	log.debug "Execting refresh"
    zigbee.smartShield(text: "update").format()
}